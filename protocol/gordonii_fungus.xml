<?xml version="1.0" encoding="UTF-8"?>
<!--

#########################################################################
 iDynoMiCS: individual-based Dynamics of Microbial Communities Simulator
#########################################################################

This is a sample protocol file for iDynoMiCS that is meant to show the many
options that may be specified in defining a simulation. The model system
in this example is a simple mixed autotroph/heterotroph population growing
in a typical wastewater treatment system, with growth kinetics based on the
ASM models of Henze et al (2000).

The comments in this file are meant to be a brief reference, and a more
complete description of the protocol file is found in the iDynoMiCS tutorial.
More complete details are also found in the paper introducing iDynoMiCS
by Lardon et al (2009, In preparation).

A few general points about protocol files:
- There is NO automatic checking for consistency in the protocol file.
  Sometimes an inconsistency will cause an error in a simulation, and the
  code will attempt to tell you where in the protocol file the error
  occurred. However, the code WILL NOT catch errors in mass balances or
  units, so you must be the watch.

- Repeat: there is NO automatic checking for consistency - YOU must be careful!

- In general, for entering parameter values it is best to use the units given
  in the protocol file already, rather than change the described unit. The
  common units used are hour or day for time, g/L for concentrations, fg for
  mass, and meter for spatial scale.

- Repeat: to be safe, CONVERT ALL PARAMETERS TO THE UNITS USED IN THIS EXAMPLE.

- Some keywords are reserved for special use by the software, such as:
  biomass, inert, capsule, pressure. In this example protocol file these
  are pointed out.

- When you create a name for a variable, you are allowed to use upper and lower
  case and numbers, but no other symbols (and no spaces, either). Examples of
  valid names include: MyParameter, anotherParameter, parameter3.

- Any label that is prefixed with 'My' in this example is free to be changed
  by you, the user, but take care not to use reserved keywords unless you
  are sure the usage is correct.


  Authors:
	Laurent Lardon
	Andreas Doetsch
	Jan-Ulrich Kreft
	Brian Merkey
	Cristian Picioreanu
	Barth F. Smets
	Joao Xavier
	Sonia Martins
	Rob Clegg
	Kieran Alden

  Website: http://www.idynomics.org

-->


<!-- The entire simulation description is contained within the <idynomics> mark-up tags. -->
<idynomics>

	<!--#####################################################################
		SIMULATOR SECTION
	######################################################################-->

	<!-- the <simulator> mark-up defines some global simulation parameters for the run. -->

	<simulator>
        <!-- Set "quietMode" to true if you don't need the log file (saves space and simulation runs slightly faster) -->
        <param name="quietMode">false</param>
		<!-- change this parameter to 'true' for restarting runs from within
			a results folder-->
		<param name="restartPreviousRun">false</param>
		<!-- defining this value allows the simulation to be re-run deterministically -->
		<param name="randomSeed">42</param>
		<!-- this specifies how often the output files should be written -->
		<param name="outputPeriod" unit="hour">1</param>

		<!-- Specifies whether the simulation should check as to whether a new release is available -->
		<param name="checkForReleaseUpdate">true</param>

		<!-- iDynoMiCS may use a fixed or an adaptive global timestep. If 'adaptive' is true,
			then the three 'timeStep***' parameters control the initial, minimum, and maximum
			values the timestep may take. If 'adaptive' is false, then the value for
			'timeStepIni' is used always.
			When the simulation has reached the time specified by 'endOfSimulation', the
			simulation will end. -->
		<timeStep>
			<param name="adaptive">true</param>
			<param name="timeStepIni" unit="hour">1</param>
			<param name="timeStepMin" unit="hour">0.05</param>
			<param name="timeStepMax" unit="hour">1.0</param>
			<param name="endOfSimulation" unit="day">2</param>
		</timeStep>

		<!-- Attachment scenario - can be 'onetime', where the cells attach to the substratum initially (as in traditional iDynoMiCS)		
		 or selfattach - where the cells start at the boundary layer and attach after a random walk to the substratum (new from Version 1.2) -->
		<param name="attachment">onetime</param>
		
		<!-- The 'agentTimeStep' parameter allows you to define a smaller timestep for agent
			behaviors and interactions. And should always be EQUAL or LOWER than the global time step -->
		<param name="agentTimeStep" unit="hour">0.05</param>
		<!-- Invasion/Competition simulation. Set to true if the simulation should stop once there is only one species left in the system -->
        <param name="invComp">true</param> 
	</simulator>


	<!--#####################################################################
		INPUT SECTION
	######################################################################-->

	<!-- You may define the initial condition from which to start a simulation
		by specifying an agent and/or bulk conditions file to read in. Often,
		the files listed are taken from an evolved state of a similar simulation.

		Note that any input files MUST be in the same directory as this protocol file. -->

	<input>
		<param name="useAgentFile">false</param>
		<param name="inputAgentFileURL">agent_State(last).xml</param>
		<param name="useBulkFile">false</param>
		<param name="inputBulkFileURL">env_Sum(last).xml</param>
	</input>



	<!--#####################################################################
		SOLUTES AND BIOMASS TYPES SECTION
	######################################################################-->

	<!-- This section is where any solutes included in the simulation are defined. Each
		solute must be assigned to a domain (which will be defined later in the protocol
		file), given a name, and must have its diffusivity parameter set.

		Note that the solute name 'pressure' is treated specially in the code:
		- 'pressure' is used to calculate the biomass pressure that leads to biomass
			spreading in the biofilm, and should generally be left as-is.

		Diffusion coefficients are expressed in units of m2.day-1.
	-->

	<solute domain="MyBiofilm" name="MyGlucose">
		<param name="diffusivity" unit="m2.day-1">4.32e-5</param>
	</solute>
	<solute domain="MyBiofilm" name="pressure">
		<param name="diffusivity" unit="m2.day-1">1.0</param>
	</solute>

	<!-- This section defines the biomass types (NOT species types) that will be used in
		the simulation. The possible types are 'biomass', 'inert', and 'capsule', representing
		active biomass, inert biomass, and capsular material (generally EPS), respectively.
		At a minimum 'biomass' must be defined. The species defined later will be made up of
		these biomass types.

		The densities are expressed in g.L-1 ( = kg.m-3 = fg.um-3).
	-->

	<particle name="biomass">
		<param name="density" unit="g.L-1">110.0</param>
	</particle>
	<particle name="inert">
		<param name="density" unit="g.L-1">110</param>
	</particle>
	<particle name="capsule">
		<param name="density" unit="g.L-1">0.0</param>
	</particle>



	<!--#####################################################################
		WORLD SECTION
	######################################################################-->

	<!-- The <world> mark-up describes the overall environment the simulation will model, and
		is made up of several mark-ups:
		- <bulk> for defining a bulk solute compartment that is a source or sink for solutes
			involved in biofilm growth.
		- <computationDomain> for defining the spatial region the biofilm will grow in.
	-->

	<world>
		<bulk name="MyTank">

			<!-- If 'isConstant' is set to false, then solute concentrations in the bulk will
				change in time due to production and consumption by the biofilm and by dilution
				at the rate 'D' -->
			<param name="isConstant">true</param>
			<param name="D" unit="h-1">0.6</param>

			<!-- List the solutes that reside in this bulk compartment, along with the initial
				concentration ('Sbulk') and influent concentration ('Sin'). Additionally, you may
				specify the 'Spulse' and 'pulseRate' parameters to spike the concentration to the
				given value at the given rate.

				Concentrations should be given as g.L-1 ( = kg.m-3 = fg.um-3 ).
				
				The 'pressure' solute parameters should be left as-is.
			-->

			<solute name="MyGlucose">
				<param name="Sbulk" unit="g.L-1">1</param>
				<param name="Sin" unit="g.L-1">1</param>
			</solute>
			
			<solute name="pressure">
				<param name="Sbulk" unit="g.L-1">0.0</param>
				<param name="Sin" unit="g.L-1">0.0</param>
			</solute>
			
		</bulk>

		<!-- The computation domain is a physical region that will contain the biofilm,
			and has a more complex setup. -->

		<computationDomain name="MyBiofilm">

			<!-- These parameters define whether the domain is 2D or 3D, and the number of
				grid elements in each direction. 'nI', 'nJ', and 'nK' should be a power of two +1
				(i.e. 33, 65, 129, etc.), and if 'nDim' is 3, then 'nK' should not be 1.

				The 'resolution' parameter defines the size of an element edge, and so the
				global domain size in a direction is the number of elements times the resolution:
					nI*resolution
			-->
			<grid nDim="2" nI="33" nJ="33" nK="1"/>
			<param name="resolution" unit="um">8.0</param>

			<!-- 'boundaryLayer' sets the distance above the biofilm/liquid interface that the
				liquid is assumed to be spatially invariant; within this distance from the biofilm the
				solute concentration will vary because of diffusion. -->
			<param name="boundaryLayer" unit="um">48.0</param>

			<!-- The 'biofilmDiffusivity' sets the relative diffusivity of the biofilm compared
				to water; because the biofilm is slightly more dense than water, the diffusivity
				will be lower. -->
			<param name="biofilmDiffusivity">0.8</param>

			<!-- The 'specificArea' is the surface-to-volume ratio of the reactor or world system, and
				is used to scale up the limited computation domain to the global scale. -->
			<param name="specificArea" unit="m2.m-3">80.0</param>


			

			<boundaryCondition class="BoundaryZeroFlux" name="y0z">
				<shape class="Planar">
					<param name="pointIn" i="-1" j="0" k="0"/>
					<param name="vectorOut" i="-1" j="0" k="0"/>
				</shape>
			</boundaryCondition>

			<boundaryCondition class="BoundaryBulk" name="yNz">
				<param name="activeForSolute">yes</param>
				<param name="bulk">MyTank</param>
				<shape class="Planar">
					<param name="pointIn" i="33" j="0" k="0"/>
					<param name="vectorOut" i="1" j="0" k="0"/>
				</shape>
			</boundaryCondition>

			<boundaryCondition class="BoundaryCyclic" name="x0z">
				<shape class="Planar">
					<param name="pointIn" i="0" j="-1" k="0"/>
					<param name="vectorOut" i="0" j="-1" k="0"/>
				</shape>
				<shape class="Planar">
					<param name="pointIn" i="0" j="33" k="0"/>
					<param name="vectorOut" i="0" j="1" k="0"/>
				</shape>
			</boundaryCondition>

			<boundaryCondition class="BoundaryCyclic" name="x0y">
				<shape class="Planar">
					<param name="pointIn" i="0" j="0" k="-1"/>
					<param name="vectorOut" i="0" j="0" k="-1"/>
				</shape>
				<shape class="Planar">
					<param name="pointIn" i="0" j="0" k="1"/>
					<param name="vectorOut" i="0" j="0" k="1"/>
				</shape>
			</boundaryCondition>
		</computationDomain>
	</world>



	
	<reaction catalyzedBy="biomass" class="ReactionFactor" name="MyGrowthGordonii">
		<param name="muMax" unit="hour-1">0.108</param>
		<kineticFactor class="MonodKinetic" solute="MyGlucose">
			<param name="Ks" unit="g.L-1">0.878</param>
		</kineticFactor>
		<yield>
			<param name="MyGlucose" unit="g.g-1">-10</param>
			<param name="biomass" unit="g.g-1">1</param>
		</yield>
	</reaction>

	<reaction catalyzedBy="biomass" class="ReactionFactor" name="myInactivationGordonii">
		<param name="muMax" unit="hour-1">0.0144</param>
		<kineticFactor class="FirstOrderKinetic">
		</kineticFactor>
		<yield>
			<param name="biomass" unit="g.g-1">-1</param>
			<param name="inert" unit="g.g-1">1</param>
		</yield>
	</reaction>

	<reaction catalyzedBy="biomass" class="ReactionFactor" name="MyGrowthFungus">
	<param name="muMax" unit="hour-1">0.7</param>
		<kineticFactor class="MonodKinetic" solute="MyGlucose">
			<param name="Ks" unit="g.L-1">2.5e-4</param>
		</kineticFactor>
		<yield>
			<param name="MyGlucose" unit="g.g-1">-1.5</param>
			<param name="biomass" unit="g.g-1">1.0</param>
		</yield>
	</reaction>




	<!--#####################################################################
		SOLVER SECTION
	######################################################################-->

	<!-- The <solver> mark-ups define the solvers to be used in calculating different
		aspects of the simulation -->

	<!-- The 'Solver_multigrid' solver will compute solute concentrations in the
		given computational domain. The given parameters pertain to details of
		the multigrid algorithm and should generally be left as-is. The list of
		<reaction> mark-ups should include ALL reactions that affect solute concentrations
		in the domain through production or consumption. -->

	<solver class="Solver_multigrid" name="solutes" domain="MyBiofilm">
		<param name="active">true</param>
		<param name="preStep">150</param>
		<param name="postStep">150</param>
		<param name="coarseStep">1500</param>
		<param name="nCycles">5</param>

		<reaction name="MyGrowthGordonii"/>
		<reaction name="MyGrowthFungus"/>

	</solver>

	<!-- The 'Solver_pressure' solver is used to compute the pressure field in the biofilm
		that is used to spread biomass due to growth. -->

	<solver class="Solver_pressure" name="pressure" domain="MyBiofilm">
		<param name="active">true</param>
	</solver>



	<!--#####################################################################
		AGENT GRID SECTION
	######################################################################-->

	<!-- The agent grid contains and manages all agents living in the given domain.
		The parameters should be adjusted to match the simulation conditions. -->

	<agentGrid>
		<!-- domain of agents to manage -->
		<param name="computationDomain">MyBiofilm</param>

		<!-- The resolution should be a multiple of two of the computationDomain resolution,
			and should be on the order of the diameter of the largest species. -->
		<param name="resolution" unit="um">8.0</param>

		<!-- The <detachment> mark-up defines the erosion forces that act on the biofilm surface.
			Detachment works by removing a layer of biomass based on the detachment speed and
			the timestep, with the detachment speed calculated via one of the given forms.
			The possible detachment types are:
			* quadratic: kDet*L^2, where L is the local biomass thickness
				<detachment class="DS_Quadratic">
					<param name="kDet" unit="um-1.hour-1">5e-6</param>
					<param name="maxTh" unit="um">200.0</param>
				</detachment>
			* biomass: kDet*L^2/X, where L is the local biomass thickness and X the local biomass
				concentration.
				<detachment class="DS_Biomass">
					<param name="kDet" unit="fg.um-4.hour-1.">2e-4</param>
					<param name="maxTh" unit="um">300.0</param>
				</detachment>

			In addition, a maximum biofilm thickness may be given via the 'maxTh' parameter.
		-->
		<detachment class="DS_Quadratic">
			<param name="kDet" unit="um-1.hour-1">5e-6</param>
			<param name="maxTh" unit="um">200.0</param>
		</detachment>

		<!-- The 'sloughDetachedBiomass' parameter sets whether biomass that is no longer
			connected to the substratum will be removed. In general this should be true, but
			set it to false if you want to consider a different structure, e.g. granules. -->
		<param name="sloughDetachedBiomass">true</param>
		
		<!-- These parameters relate to particle shoving and are generally okay as-is. -->
		<param name="shovingMaxNodes">2e6</param>
		<param name="shovingFraction">0.025</param>
		<param name="shovingMaxIter">250</param>
		<param name="shovingMutual">false</param>
	</agentGrid>


	
	<species class="Bacterium" name="MyGordonii">
		<particle name="biomass">
			<param name="mass" unit="fg">0.0</param>
		</particle>
		<particle name="inert">
			<param name="mass" unit="fg">0.0</param>
		</particle>

		<param name="color">green</param>
		<param name="computationDomain">MyBiofilm</param>
		<param name="divRadius" unit="um">2.0</param>
		<param name="divRadiusCV">0.1</param>
		<param name="deathRadius" unit="um">0.2</param>
		<param name="deathRadiusCV">0.1</param>
		<param name="babyMassFrac">0.5</param>
		<param name="babyMassFracCV">0.05</param>
		<param name="shoveFactor" unit="um">1.5</param>
		<param name="shoveLimit" unit="um">0.0</param>

		<param name="epsMax">0.1</param>
		<param name="kHyd" unit="hr-1">0.007</param>

		<reaction name="MyGrowthGordonii" status="active"/>
		<reaction name="myInactivationGordonii" status="inactive"/>

		<initArea number="50">
			<param name="birthday" unit="hour">0.0</param>
			<coordinates x="0.0" y="0.0" z="0.0"/>
			<coordinates x="1.0" y="264.0" z="0.0"/>
		</initArea>
	</species>

	<species class="Fungus" name="MyHeterotroph">
		<particle name="biomass">
			<param name="mass" unit="fg">0</param>
		</particle>
		<particle name="inert">
			<param name="mass" unit="fg">0</param>
		</particle>

		<param name="color">blue</param>
		<param name="computationDomain">MyBiofilm</param>
		<param name="divRadius" unit="um">2</param>
		<param name="divRadiusCV">0.1</param>
		<param name="deathRadius" unit="um">0.2</param>
		<param name="deathRadiusCV">0.1</param>
		<param name="babyMassFrac">0.5</param>
		<param name="babyMassFracCV">0.05</param>
		<param name="shoveFactor" unit="um">2</param>
		<param name="shoveLimit" unit="um">0</param>

		<param name="epsMax">1</param>
		<param name="kHyd" unit="hr-1">0.007</param>

		<reaction name="MyGrowthFungus" status="active"/>

		<initArea number="5">
			<param name="birthday" unit="hour">0</param>
			<coordinates x="0" y="0" z="0"/>
			<coordinates x="1" y="264" z="0"/>
		</initArea>
	</species>
	
	
</idynomics>
